課題を確認しました、OKです。

クラスの分離、コンストラクタ、セッター、ゲッターの実装、
別のクラスからの呼び出しなど正しくコーディングできています。
計算結果に対する条件分岐も申し分なしです。

この調子で学習を進めてください。

計算したBMI値の保持にBigDecimalクラスを使ったのですね、
学習したスキルを早速活用できていて、すばらしいと思います。

変数名やメソッド名を工夫すると、今後さらにレベルアップできそうです。

・身長ht、体重wtですが、略さずに、height, weightとした方が、私は読みやすと感じます。

・BMIの計算メソッドcalcは、「BMIを計算する」という意味で、calcBMIだとわかりやすいです。
また、「BMIを計算する」機能と「BMIの値に応じて肥満度を判定する」機能の2つを含んでいるので、
分割するとコードの保守性が上がりますね。

この調子で学習を進めてください。

* プログラミングそのものはよくできています。
課題の指定に、
``` 算出されたBMIを元に「低体重」「標準」「肥満」などの分類に分けて表示しましょう。 ```
とあるので、BMIの計算をし、その値をもとに分類を表示する処理を加えてください。

* Personクラスに名前を持たせる設計にしたのですね、良い工夫だと思います。
カプセル化の原則により、理由のない限りフィールドのアクセス修飾子はprivateにしましょう。

```
private String name;
```

* BMIの計算で、引数で身長と体重を渡しています。

```
	public static double bmi(double height, double weight) {
		double bmi = weight / height / height;

		return bmi;
	}
```

ここは以下のようにPersonインスタンスを渡し、メソッド内で身長と体重を取り出す、という方法もありです。

```
	public static double bmi(Person person) {
		double weight = person.getWeight();
		double height = person.getHeight();
		double bmi = weight / height / height;
		return bmi;
	}
```

課題を確認しました、OKです。
BMIの算出方法を調査し、正しく実装できていると思います。

しいて申し上げると、「プログラムの可読性、保守性向上のために、１つのメソッドには１つの役割だけ持たせるのが良い」とされています。
この課題でしたら、以下２つのメソッドに分けると良いでしょう。

* BMIを計算する

* BMIの値をもとに体型を判定する

余力があったら取り組んでみてください。
